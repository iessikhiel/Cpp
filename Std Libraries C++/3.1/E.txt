#include <iostream>
#include <vector>
#include <string>

void TextEditor() {
    std::vector<std::string> lines;
    std::string line;

    while (std::getline(std::cin, line)) {
        if (line.empty()) break;
        lines.push_back(line);
    }

    std::string clipboard;
    int cursor = 0;
    int selection_start = -1;
    int selection_end = -1;

    while (std::getline(std::cin, line)) {
        if (line == "Down") {
            if (cursor < lines.size() - 1) {
                cursor++;

                if (selection_start != -1) {
                    selection_end = cursor;
                }
            }
        } else if (line == "Up") {
            if (cursor > 0) {
                cursor--;

                if (selection_start != -1) {
                    selection_end = cursor;
                }
            }
        } else if (line == "Shift") {

            if (selection_start == -1) 
            {
                selection_start = cursor;
                selection_end = cursor;
            }
        } else if (line == "Ctrl+X") {
            if (selection_start != -1 && selection_start <= selection_end) {

                for (int i = selection_start; i <= selection_end; ++i) {
                    if (i < lines.size()) {
                        clipboard = lines[i];
                    }
                }

                lines.erase(lines.begin() + selection_start, lines.begin() + selection_end + 1);
                cursor = selection_start;
                selection_start = -1;
                selection_end = -1;
            } else if (cursor < lines.size() && !lines[cursor].empty()) {

                clipboard = lines[cursor];
                lines[cursor].clear();
            }
        } else if (line == "Ctrl+V") {
            if (!clipboard.empty()) {
                if (selection_start != -1) {

                    lines.erase(lines.begin() + selection_start, lines.begin() + selection_end + 1);
                }

                lines.insert(lines.begin() + cursor, clipboard);
                cursor++;
                selection_start = -1;
                selection_end = -1;
            }
        }
    }

    for (const auto& l : lines) {
        std::cout << l << std::endl;
    }
}
